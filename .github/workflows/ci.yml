name: ci
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up GraalVM
        uses: DeLaGuardo/setup-graalvm@3.1
        with:
          graalvm-version: 21.1.0.java16
      - name: Install Native Image
        run: gu install native-image
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: mvn-${{hashFiles('pom.xml')}}
          restore-keys: |
            mvn-
      - name: Build
        run: ./mvnw --batch-mode verify
      - name: Upload code coverage
        uses: codecov/codecov-action@v1
      - name: Upload native-image configuration files
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v2
        with:
          name: native-image-configuration
          path: target/classes/META-INF/native-image
  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-20.04,macos-11.0,windows-2019]
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Download native-image configuration files
        uses: actions/download-artifact@v2
        with:
          name: native-image-configuration
      - name: Set up GraalVM
        uses: DeLaGuardo/setup-graalvm@3.1
        with:
          graalvm-version: 21.1.0.java16
      - name: Install Native Image
        run: gu install native-image
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: mvn-${{hashFiles('pom.xml')}}
          restore-keys: |
            mvn-
      - name: Build
        run: ./mvnw --batch-mode --activate-profiles release verify
